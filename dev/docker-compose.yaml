version: '3'

services:

  n8n:
    image: n8nio/n8n
    environment:
      - PUID=${DOCKER_UID}
      - PGID=${DOCKER_GID}
      - TZ=Asia/Shanghai
      - GENERIC_TIMEZONE=Asia/Shanghai
      - DATA_FOLDER=/home/node/.n8n
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_BASIC_AUTH_USER=n8n
      - N8N_BASIC_AUTH_PASSWORD=n8n
      - N8N_HOST=n8n.${TF_VAR_domain}:${TF_VAR_port}
      - NODE_ENV=production
      - WEBHOOK_URL=https://n8n.${TF_VAR_domain}:${TF_VAR_port}/
      - N8N_EDITOR_BASE_URL=https://n8n.${TF_VAR_domain}:${TF_VAR_port}
      - VUE_APP_URL_BASE_API=https://n8n.${TF_VAR_domain}:${TF_VAR_port}
    volumes:
      - ${CONFIG_PATH}/n8n:/home/node/.n8n
      - ${CONFIG_PATH}/n8n-files:/files
      - /run/mysqld/mysqld.sock:/var/run/mysql/mysql.sock
    networks:
      - n8n
      - default
    labels:
      traefik.enable: true
      traefik.docker.network: network_default
      traefik.http.routers.n8n.tls: true
      # traefik.http.routers.n8n.tls.certresolver: ${ACME_NAME}
      traefik.http.routers.n8n.entrypoints: websecure
      "traefik.http.routers.n8n.tls.domains[0].main": ${TF_VAR_domain}
      "traefik.http.routers.n8n.tls.domains[0].sans": "*.${TF_VAR_domain}"
      traefik.http.routers.n8n.rule: Host(`n8n.${TF_VAR_domain}`)
      traefik.http.routers.n8n.middlewares: authentik-docker@file
      traefik.http.services.n8n.loadbalancer.server.port: 5678
    restart: unless-stopped

  n8n-user-database:
    image: postgres:14-alpine
    restart: unless-stopped
    user: ${DOCKER_UID}:${DOCKER_GID}
    volumes:
      # 不要删除索引数据库文件的永久存储空间!
      - "${CONFIG_PATH}/n8n-user/database:/var/lib/postgresql/data/"
    networks:
      - n8n
    environment:
      POSTGRES_USER: n8n-user
      POSTGRES_PASSWORD: n8n-user
      POSTGRES_DB: n8n-user

  hc:
    image: lscr.io/linuxserver/healthchecks
    environment:
      - PUID=${DOCKER_UID}
      - PGID=${DOCKER_GID}
      - TZ=Asia/Shanghai
      - ALLOWED_HOSTS=hc.${TF_VAR_domain}
      - SITE_ROOT=https://hc.${TF_VAR_domain}:${TF_VAR_port}
      - REMOTE_USER_HEADER=HTTP_X_AUTHENTIK_EMAIL
    volumes:
      - ${CONFIG_PATH}/healthchecks:/config
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.docker.network: network_default
      traefik.http.routers.hc.tls: true
      # traefik.http.routers.hc.tls.certresolver: ${ACME_NAME}
      traefik.http.routers.hc.entrypoints: websecure
      "traefik.http.routers.hc.tls.domains[0].main": ${TF_VAR_domain}
      "traefik.http.routers.hc.tls.domains[0].sans": "*.${TF_VAR_domain}"
      traefik.http.routers.hc.rule: Host(`hc.${TF_VAR_domain}`)
      traefik.http.routers.hc.middlewares: authentik-docker@file
      traefik.http.services.hc.loadbalancer.server.port: 8000
      traefik.http.services.hc.loadbalancer.passhostheader: true
    restart: unless-stopped

  gitea:
    image: gitea/gitea:1.20
    environment:
      - USER_UID=${DOCKER_UID}
      - USER_GID=${DOCKER_GID}
      - TZ=Asia/Shanghai
    volumes:
      - ${CONFIG_PATH}/gitea:/data
      - /etc/localtime:/etc/localtime:ro
      - /run/mysqld/mysqld.sock:/var/run/mysql/mysql.sock
    ports:
      - target: 22
        published: 2222
        mode: host
    labels:
      traefik.enable: true
      traefik.docker.network: network_default
      traefik.http.routers.gitea.tls: true
      # traefik.http.routers.gitea.tls.certresolver: ${ACME_NAME}
      traefik.http.routers.gitea.entrypoints: websecure
      "traefik.http.routers.gitea.tls.domains[0].main": ${TF_VAR_domain}
      "traefik.http.routers.gitea.tls.domains[0].sans": "*.${TF_VAR_domain}"
      traefik.http.routers.gitea.rule: Host(`gitea.${TF_VAR_domain}`)
      # traefik.http.routers.gitea.middlewares: authentik-docker@file
      traefik.http.services.gitea.loadbalancer.server.port: 3000
      traefik.http.services.gitea.loadbalancer.passhostheader: true
    restart: unless-stopped

  gitea-act-runner:
    image: gitea/act_runner
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ${CONFIG_PATH}/gitea-act-runner:/data:rw # the config file is located at /data/.runner and needs to survive container restarts
    environment:
      TZ: "Asia/Shanghai"
      CONFIG_FILE: /data/config.yml
      GITEA_INSTANCE_URL: http://gitea:3000
      GITEA_RUNNER_REGISTRATION_TOKEN: zEeT92ThCQDt46TQAsOtFLraxkJN8xzRxo5xhiWp
      GITEA_RUNNER_NAME: yttl-docker-runner
      GITEA_RUNNER_LABELS: ubuntu-latest:docker://ubuntu:22.04,ubuntu-22.04:docker://ubuntu:22.04
    labels:
      com.centurylinklabs.watchtower.enable: true

  atuin:
    restart: always
    image: ghcr.io/ellie/atuin:main
    user: ${DOCKER_UID}:${DOCKER_GID}
    command: server start
    volumes:
      - "${CONFIG_PATH}/atuin/config:/config"
    links:
      - atuin-postgresql:db
    environment:
      ATUIN_HOST: "0.0.0.0"
      ATUIN_OPEN_REGISTRATION: "false"
      ATUIN_DB_URI: postgres://atuin:${ATUIN_DB_PASSWORD}@db/atuin
    networks:
      - autin
      - default

    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.docker.network: network_default
      traefik.http.routers.atuin.tls: true
      # traefik.http.routers.atuin.tls.certresolver: ${ACME_NAME}
      traefik.http.routers.atuin.entrypoints: websecure
      "traefik.http.routers.atuin.tls.domains[0].main": ${TF_VAR_domain}
      "traefik.http.routers.atuin.tls.domains[0].sans": "*.${TF_VAR_domain}"
      traefik.http.routers.atuin.rule: Host(`atuin.${TF_VAR_domain}`)
      # traefik.http.routers.atuin.middlewares: authentik-docker@file
      traefik.http.services.atuin.loadbalancer.server.port: 8888
      traefik.http.services.atuin.loadbalancer.passhostheader: true

  atuin-postgresql:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      # 不要删除索引数据库文件的永久存储空间!
      - "${CONFIG_PATH}/atuin/database:/var/lib/postgresql/data/"
    networks:
      - autin
    environment:
      POSTGRES_USER: atuin
      POSTGRES_PASSWORD: ${ATUIN_DB_PASSWORD}
      POSTGRES_DB: atuin

  drone:
    image: drone/drone:2
    volumes:
      - ${CONFIG_PATH}/drone:/data
    environment:
      - TZ=Asia/Shanghai
      - DRONE_SERVER_PROTO=https
      - DRONE_SERVER_HOST=drone.${TF_VAR_domain}:8443
      - DRONE_RPC_SECRET=${DRONE_AGENT_SECRET}
      - DRONE_GITEA_SERVER=https://gitea.${TF_VAR_domain}:8443
      - DRONE_GITEA_CLIENT_ID=${DRONE_GITEA_CLIENT}
      - DRONE_GITEA_CLIENT_SECRET=${DRONE_GITEA_SECRET}
      - DRONE_USER_CREATE=username:eindex,admin:true
      - DRONE_RUNNER_NETWORKS=network_default
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.docker.network: network_default
      traefik.http.routers.drone.tls: true
      traefik.http.routers.drone.entrypoints: websecure
      "traefik.http.routers.drone.tls.domains[0].main": ${TF_VAR_domain}
      "traefik.http.routers.drone.tls.domains[0].sans": "*.${TF_VAR_domain}"
      traefik.http.routers.drone.rule: Host(`drone.${TF_VAR_domain}`)
      traefik.http.services.drone.loadbalancer.server.port: 80
      traefik.http.services.drone.loadbalancer.passhostheader: true


  drone-runner:
    image: drone/drone-runner-docker:1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_SECRET=${DRONE_AGENT_SECRET}
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=yttl-runner
    restart: always

networks:
  default:
    name: network_default
    external: true
  autin:
  n8n:
