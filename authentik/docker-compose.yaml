version: '3'

services:

  authentik-postgresql:
    image: docker.io/library/postgres:12-alpine
    user: ${DOCKER_UID}:${DOCKER_GID}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
        ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ${CONFIG_PATH}/authentik/database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${AUTHENTIK_PG_PASS:?database password required}
      - POSTGRES_USER=${PG_USER:-authentik}
      - POSTGRES_DB=${PG_DB:-authentik}
      - PUID=1026
      - PGID=100
      - TZ=Asia/Shanghai
    networks:
      - authentik

  authentik-redis:
    image: docker.io/library/redis:alpine
    user: ${DOCKER_UID}:${DOCKER_GID}
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - ${CONFIG_PATH}/authentik/redis:/data
    networks:
      - authentik

  authentik-server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.10.1}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_PG_PASS}
    volumes:
      - ${CONFIG_PATH}/authentik/media:/media
      - ${CONFIG_PATH}/authentik/custom-templates:/templates
      - ${CONFIG_PATH}/authentik/shm:/dev/shm
      # - /var/run/docker.sock:/var/run/docker.sock
    user: root
    labels:
      traefik.enable: true
      traefik.docker.network: network_default
      traefik.http.routers.sso.rule: Host(`sso.${TF_VAR_domain}`)
      traefik.http.routers.sso.tls: true
      # traefik.http.routers.sso.tls.certresolver: ${ACME_NAME}
      traefik.http.routers.sso.entrypoints: websecure
      "traefik.http.routers.sso.tls.domains[0].main": "${TF_VAR_domain}"
      "traefik.http.routers.sso.tls.domains[0].sans": "*.${TF_VAR_domain}"
      traefik.http.services.sso.loadbalancer.server.port: 9000
      traefik.http.services.sso.loadbalancer.passhostheader: true
    networks:
      - default
      - authentik

  authentik-ldap:
    image: ghcr.io/goauthentik/ldap:${AUTHENTIK_TAG:-2022.10.1}
    ports:
      - 3389:3389
    environment:
      AUTHENTIK_HOST: http://authentik-server:9000
      AUTHENTIK_INSECURE: "true"
      AUTHENTIK_TOKEN: ${AUTHENTIK_LADP_TOKEN}
    networks:
      - authentik

  authentik-worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.10.1}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_HOST: http://authentik-server:9000
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_LOG_LEVEL: debug
      AUTHENTIK_ERROR_REPORTING__ENABLED: ${AUTHENTIK_ERROR_REPORTING__ENABLED}
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_PG_PASS}
    user: root
    volumes:
      - ${CONFIG_PATH}/authentik/media:/media
      - ${CONFIG_PATH}/authentik/certs:/certs
      # - ${CONFIG_PATH}/authentik/shm:/dev/shm
      - ${CONFIG_PATH}/authentik/custom-templates:/templates
      # - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - authentik

  authentik-proxy:
    image: ghcr.io/goauthentik/proxy:${AUTHENTIK_TAG:-2022.10.1}
    environment:
      AUTHENTIK_HOST: http://authentik-server:9000
      AUTHENTIK_INSECURE: "true"
      AUTHENTIK_TOKEN: ${AUTHENTIK_PROXY_TOKEN}
      AUTHENTIK_HOST_BROWSER: https://sso.${TF_VAR_domain}:${TF_VAR_port}
    networks:
      - default
      - authentik
    labels:
      traefik.enable: true
      traefik.docker.network: network_default
      traefik.http.routers.sso-proxy.rule: Host(`admin.${TF_VAR_domain}`) || Host(`auth.${TF_VAR_domain}`) || (HostRegexp(`{subdomain:[a-z\-]+}.${TF_VAR_domain}`) && PathPrefix(`/outpost.goauthentik.io/`))
      traefik.http.routers.sso-proxy.tls: true
      # traefik.http.routers.sso-proxy.tls.certresolver: ${ACME_NAME}
      traefik.http.routers.sso-proxy.entrypoints: websecure
      "traefik.http.routers.sso-proxy.tls.domains[0].main": "${TF_VAR_domain}"
      "traefik.http.routers.sso-proxy.tls.domains[0].sans": "*.${TF_VAR_domain}"
      traefik.http.services.sso-proxy.loadbalancer.server.port: 9000
      traefik.http.services.sso-proxy.loadbalancer.passhostheader: true
    restart: unless-stopped

networks:
  default:
    name: network_default
    external: true
  authentik:
